


В Python к изменяемым типам данных относятся списки (list), 
множества (set), словари (dict), а к неизменяемым — числа, 
строки (str), кортежи (tuple), 



str = ("") - строка
Строковый тип данных — это последовательности символов  любой длины, заключённые в одинарные, двойные или тройные кавычки. 

count()-возвращает количество появлений указанного значения в строке.

txt = "I love apples, apple are my favorite fruit"
x = txt.count("apple")
print(x)


index() - Метод index()находит первое вхождение указанного значения.
Метод index()вызывает исключение, если значение не найдено.
Метод index()почти такой же, как и find() метод , единственное отличие в том, что find() метод возвращает -1, если значение не найдено. (См. пример ниже)


Где в тексте впервые встречается буква «е»?:

txt = "Hello, welcome to my world."
x = txt.index("e")
print(x)

lower(): переводит строку в нижний регистр

upper(): переводит строку в вехний регистр

title(): начальные символы всех слов в строке переводятся в верхний регистр
replace(old, new): заменяет подстроку old на new



Список- list [ ]— это коллекция, которая упорядочена и изменяема. Допускает дублирование членов.
Tuple ( )— это коллекция, которая упорядочена и неизменяема. Допускает дублирование членов.
Набор- set {} — это коллекция, которая не упорядочена, неизменяема* и неиндексирована. Нет повторяющихся членов.
Словарь —Dictionary{ } это коллекция, которая упорядочена** и изменяема. Нет повторяющихся элементов.






Методы для str ("")
str.upper() – возвращает строку в верхнем регистре.

text = "hello"
print(text.upper())  # "HELLO"



str.lower() – возвращает строку в нижнем регистре.

text = "HELLO"
print(text.lower())  # "hello"



str.strip() – удаляет пробелы в начале и в конце строки.

text = "   hello   "
print(text.strip())  # "hello"


str.replace(old, new) – заменяет подстроку в строке.

text = "hello world"
print(text.replace("world", "Python"))  # "hello Python"


str.split(separator) – разбивает строку на список по указанному разделителю.

text = "hello,world"
print(text.split(","))  # ["hello", "world"]





Методы для tuple ('')
Так как кортежи неизменяемы, у них всего два метода:

tuple.count(element) – возвращает количество вхождений элемента в кортеже.

numbers = (1, 2, 2, 3)
print(numbers.count(2))  # 2


tuple.index(element) – возвращает индекс первого вхождения элемента, если элемент не найден – вызывает ошибку.

numbers = (1, 2, 3)
print(numbers.index(2))  # 1



Методы для set {}
set.add(element) – добавляет элемент в множество.
my_set = {1, 2}
my_set.add(3)
print(my_set)  # {1, 2, 3}


set.remove(element) – удаляет элемент из множества (ошибка, если элемент не найден).
my_set = {1, 2, 3}
my_set.remove(2)
print(my_set)  # {1, 3}




Методы для list []


list.append(element) – добавляет элемент в конец списка.


numbers = [1, 2]
numbers.append(3)
print(numbers)  # [1, 2, 3]



list.remove(element) – удаляет первое вхождение элемента в списке (ошибка, если элемент не найден).
numbers = [1, 2, 3]
numbers.remove(2)
print(numbers)  # [1, 3]


list.pop(index) – удаляет элемент по индексу (по умолчанию – последний) и возвращает его.

numbers = [1, 2, 3]
print(numbers.pop())  # 3
print(numbers)  # [1, 2]

list.index(element) – возвращает индекс первого вхождения элемента (ошибка, если элемент не найден).

numbers = [1, 2, 3]
print(numbers.index(2))  # 1
list.count(element) – возвращает количество вхождений элемента в списке.

numbers = [1, 2, 2, 3]
print(numbers.count(2))  # 2
list.sort() –
numbers = [3, 1, 2]
numbers.sort()
print(numbers)  # [1, 2, 3]
list.reverse() – переворачивает список.

numbers = [1, 2, 3]
numbers.reverse()
print(numbers)  # [3, 2, 1]


Методы для dict
dict.get(key, default=None) – возвращает значение по ключу или None, если ключ отсутствует.

my_dict = {'a': 1, 'b': 2}
print(my_dict.get('a'))  # 1
print(my_dict.get('c', 'Not Found'))  # Not Found

dict.keys() – возвращает объект, содержащий все ключи словаря.

my_dict = {'a': 1, 'b': 2}
print(list(my_dict.keys()))  # ['a', 'b']

dict.values() – возвращает объект, содержащий все значения словаря.

my_dict = {'a': 1, 'b': 2}
print(list(my_dict.values()))  # [1, 2]


dict.items() – возвращает объект, содержащий пары ключ-значение.

my_dict = {'a': 1, 'b': 2}
print(list(my_dict.items()))  # [('a', 1), ('b', 2)]


dict.pop(key, default=None) – удаляет ключ и возвращает его значение или default, если ключ отсутствует.

my_dict = {'a': 1, 'b': 2}
print(my_dict.pop('a'))  # 1
print(my_dict)  # {'b': 2}


dict.update(other_dict) – обновляет словарь, добавляя пары ключ-значение из другого словаря.

my_dict = {'a': 1}
my_dict.update({'b': 2, 'c': 3})
print(my_dict)  # {'a': 1, 'b': 2, 'c': 3}